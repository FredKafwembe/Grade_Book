-- MySQL Script generated by MySQL Workbench
-- Tue May 21 10:21:14 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema grade_book
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `grade_book` ;

-- -----------------------------------------------------
-- Schema grade_book
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `grade_book` DEFAULT CHARACTER SET utf8 ;
USE `grade_book` ;

-- -----------------------------------------------------
-- Table `grade_book`.`roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grade_book`.`roles` ;

CREATE TABLE IF NOT EXISTS `grade_book`.`roles` (
  `role_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grade_book`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grade_book`.`users` ;

CREATE TABLE IF NOT EXISTS `grade_book`.`users` (
  `user_id` INT(11) NOT NULL AUTO_INCREMENT,
  `role_id_fk` INT(11) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `contact_number` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `u_role_id_fk`
    FOREIGN KEY (`role_id_fk`)
    REFERENCES `grade_book`.`roles` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `u_role_id_fk_idx` ON `grade_book`.`users` (`role_id_fk` ASC);


-- -----------------------------------------------------
-- Table `grade_book`.`permissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grade_book`.`permissions` ;

CREATE TABLE IF NOT EXISTS `grade_book`.`permissions` (
  `permission_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`permission_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grade_book`.`grades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grade_book`.`grades` ;

CREATE TABLE IF NOT EXISTS `grade_book`.`grades` (
  `grade_id` INT(11) NOT NULL,
  `grade_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`grade_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grade_book`.`grades_taught`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grade_book`.`grades_taught` ;

CREATE TABLE IF NOT EXISTS `grade_book`.`grades_taught` (
  `user_id_fk` INT(11) NOT NULL,
  `grade_id_fk` INT(11) NOT NULL,
  PRIMARY KEY (`user_id_fk`, `grade_id_fk`),
  CONSTRAINT `gt_grade_id_fk`
    FOREIGN KEY (`grade_id_fk`)
    REFERENCES `grade_book`.`grades` (`grade_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `gt_user_id_fk`
    FOREIGN KEY (`user_id_fk`)
    REFERENCES `grade_book`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `gt_user_id_fk_idx` ON `grade_book`.`grades_taught` (`user_id_fk` ASC);


-- -----------------------------------------------------
-- Table `grade_book`.`subjects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grade_book`.`subjects` ;

CREATE TABLE IF NOT EXISTS `grade_book`.`subjects` (
  `subject_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `required` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`subject_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grade_book`.`subjects_taught`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grade_book`.`subjects_taught` ;

CREATE TABLE IF NOT EXISTS `grade_book`.`subjects_taught` (
  `subject_id_fk` INT(11) NOT NULL,
  `user_id_fk` INT(11) NOT NULL,
  PRIMARY KEY (`subject_id_fk`, `user_id_fk`),
  CONSTRAINT `st_subject_id_fk`
    FOREIGN KEY (`subject_id_fk`)
    REFERENCES `grade_book`.`subjects` (`subject_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `st_user_id_fk`
    FOREIGN KEY (`user_id_fk`)
    REFERENCES `grade_book`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `subject_id_fk_idx` ON `grade_book`.`subjects_taught` (`subject_id_fk` ASC);

CREATE INDEX `st_user_id_fk_idx` ON `grade_book`.`subjects_taught` (`user_id_fk` ASC);


-- -----------------------------------------------------
-- Table `grade_book`.`pupils`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grade_book`.`pupils` ;

CREATE TABLE IF NOT EXISTS `grade_book`.`pupils` (
  `user_id_fk` INT(11) NOT NULL,
  `grade_id_fk` INT(11) NOT NULL,
  PRIMARY KEY (`user_id_fk`),
  CONSTRAINT `p_user_id_fk`
    FOREIGN KEY (`user_id_fk`)
    REFERENCES `grade_book`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `grade_id_fk`
    FOREIGN KEY (`grade_id_fk`)
    REFERENCES `grade_book`.`grades` (`grade_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `p_user_id_fk_idx` ON `grade_book`.`pupils` (`user_id_fk` ASC);

CREATE INDEX `grade_id_fk_idx` ON `grade_book`.`pupils` (`grade_id_fk` ASC);


-- -----------------------------------------------------
-- Table `grade_book`.`marks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grade_book`.`marks` ;

CREATE TABLE IF NOT EXISTS `grade_book`.`marks` (
  `user_id_fk` INT(11) NOT NULL,
  `subject_id_fk` INT(11) NOT NULL,
  `test_time` ENUM('mid', 'end') NOT NULL DEFAULT 'mid',
  `percentage` DECIMAL NOT NULL,
  PRIMARY KEY (`user_id_fk`, `subject_id_fk`, `test_time`),
  CONSTRAINT `m_subject_id_fk`
    FOREIGN KEY (`subject_id_fk`)
    REFERENCES `grade_book`.`subjects` (`subject_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `m_user_id_fk`
    FOREIGN KEY (`user_id_fk`)
    REFERENCES `grade_book`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `m_user_id_fk_idx` ON `grade_book`.`marks` (`user_id_fk` ASC);


-- -----------------------------------------------------
-- Table `grade_book`.`grade_subjects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grade_book`.`grade_subjects` ;

CREATE TABLE IF NOT EXISTS `grade_book`.`grade_subjects` (
  `grade_id_fk` INT(11) NOT NULL,
  `subject_id_fk` INT(11) NOT NULL,
  PRIMARY KEY (`grade_id_fk`, `subject_id_fk`),
  CONSTRAINT `gs_grade_id_fk`
    FOREIGN KEY (`grade_id_fk`)
    REFERENCES `grade_book`.`grades` (`grade_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `gs_subject_id_fk`
    FOREIGN KEY (`subject_id_fk`)
    REFERENCES `grade_book`.`subjects` (`subject_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `subject_id_fk_idx` ON `grade_book`.`grade_subjects` (`subject_id_fk` ASC);


-- -----------------------------------------------------
-- Table `grade_book`.`role_permissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grade_book`.`role_permissions` ;

CREATE TABLE IF NOT EXISTS `grade_book`.`role_permissions` (
  `role_id_fk` INT(11) NOT NULL,
  `permission_id_fk` INT(11) NOT NULL,
  PRIMARY KEY (`role_id_fk`, `permission_id_fk`),
  CONSTRAINT `rp_role_id_fk`
    FOREIGN KEY (`role_id_fk`)
    REFERENCES `grade_book`.`roles` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `rp_permission_id_fk`
    FOREIGN KEY (`permission_id_fk`)
    REFERENCES `grade_book`.`permissions` (`permission_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `rp_permission_id_fk_idx` ON `grade_book`.`role_permissions` (`permission_id_fk` ASC);


-- -----------------------------------------------------
-- Data for table `grade_book`.`roles`
-- -----------------------------------------------------
START TRANSACTION;
USE `grade_book`;
INSERT INTO `grade_book`.`roles` (`role_id`, `name`) VALUES (DEFAULT, 'Super_Admin');

COMMIT;


-- -----------------------------------------------------
-- Data for table `grade_book`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `grade_book`;
INSERT INTO `grade_book`.`users` (`user_id`, `role_id_fk`, `password`, `email`, `first_name`, `last_name`, `contact_number`) VALUES (DEFAULT, 1, 'd8578edf8458ce06fbc5bb76a58c5ca4', 'fredjkafwembe@gmail.com', 'Fred', 'Kafwembe', '+260974223613');

COMMIT;


-- -----------------------------------------------------
-- Data for table `grade_book`.`permissions`
-- -----------------------------------------------------
START TRANSACTION;
USE `grade_book`;
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (1, 'Create_Users');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (2, 'View_Users');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (3, 'Edit_Users');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (4, 'Delete_Users');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (5, 'Create_Results');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (6, 'View_Results');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (7, 'Edit_Results');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (8, 'Delete_Results');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (9, 'Create_Grades');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (10, 'View_Grades');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (11, 'Edit_Grades');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (12, 'Delete_Grades');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (13, 'Create_Roles');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (14, 'View_Roles');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (15, 'Edit_Roles');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (16, 'Delete_Roles');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (17, 'Create_Subjects');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (18, 'View_Subjects');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (19, 'Edit_Subjects');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (20, 'Delete_Subjects');
INSERT INTO `grade_book`.`permissions` (`permission_id`, `name`) VALUES (21, 'View_Permissions');

COMMIT;


-- -----------------------------------------------------
-- Data for table `grade_book`.`role_permissions`
-- -----------------------------------------------------
START TRANSACTION;
USE `grade_book`;
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 1);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 2);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 3);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 4);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 5);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 6);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 7);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 8);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 9);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 10);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 11);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 12);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 13);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 14);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 15);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 16);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 17);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 18);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 19);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 20);
INSERT INTO `grade_book`.`role_permissions` (`role_id_fk`, `permission_id_fk`) VALUES (1, 21);

COMMIT;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
